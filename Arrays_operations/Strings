Longest Common Prefix
class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
      int n=strs.size();
      string s="";
      if(n==0){
        return s;
      }
 sort(strs.begin(),strs.end());

      string a=strs[0];
      string b=strs[n-1]; 
      for(auto it : a){
        cout<<it<<" ";
      }
      for(auto it : b){
        cout<<it<<" ";
      }
    for(int i=0;i<a.size();i++){
        if(a[i]==b[i]){
          s=s+a[i];
        }else{
          break;
        }
      }
      return s;        
    }
};
Input: strs = ["flower","flow","flight"]
Output: "fl"


Valid Palindrome II:

class Solution {
public:
    bool validPalindrome(string s) {
        int n=s.length();
      if(n==1){
        return true;
      }
      int i=0,j=n-1;
     for(int i=0;i<n;i++){
       if(checkPalindrome(removeString(s,i))){
         return true;
         }
     }
      return false;
    }
  bool checkPalindrome(string s){
     int n=s.length();
    int i=0,j=n-1;
      while(i<j){
        if(s[i]!=s[j]){
          return false;
        }
        i++,j--;
      }
    return true;
  }
  string removeString(string s,int num){
    for(int i=0;i<s.length();i++){
      if(num==i){
        s.erase(s.begin()+i);
      }
    }
    return s;
  }
};


//Input: s = "abca"
//Output: true
//Explanation: You could delete the character 'c'.

Add Numbers:
class Solution {
public:
    string addBinary(string a, string b) {
    int i = a.size()-1, j = b.size()-1;
    int carry = 0;
    string ret = "";
    while (i >= 0 || j >= 0 || carry!=0) {
        if (i >= 0) {
            carry += a[i]=='0'?0:1;
            i--;
        }
        if (j >= 0) {
            carry += b[j]=='0'?0:1;
            j--;
        }
        ret = ((carry%2)==0?"0":"1") + ret;
        carry /= 2;
    }
    return ret;
}

};
//Input: a = "1010", b = "1011"
//Output: "10101"

